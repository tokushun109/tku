services:
  # MySQL
  db:
    build:
      context: ./backend/api
      dockerfile: ./docker/db/Dockerfile
    container_name: mysql
    volumes:
      - ./backend/api/app/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./backend/api/app/db/initdb.d:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - DB_USER=root
      - DB_PASS=root
      - DB_NAME=tku
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -uroot -proot
    # healthcheck:
    #   test: mysqladmin ping -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    command: mysqld --innodb_use_native_aio=0

  # DB migratie
  migrate:
    build:
      context: ./backend/api
      dockerfile: ./docker/migrations/Dockerfile
    container_name: migrate
    env_file: ./backend/api/.env
    environment:
      MYSQL_HOST: mysql
    depends_on:
      db:
        condition: service_healthy
    command: [ "up" ]
    volumes:
      - ./backend/api/app/db/migrations:/migrations

  # API
  api:
    build:
      context: ./backend/api
      dockerfile: ./docker/api/Dockerfile
    container_name: api
    env_file: ./backend/api/.env
    environment:
      MYSQL_HOST: mysql
    depends_on:
      - migrate
    command: sh ./docker/api/script/local/command.sh
    ports:
      - 8080:8080
    volumes:
      - ./backend/api:/api

  # FRONTEND
  frontend:
    build:
      context: ./frontend
      dockerfile: ./docker/Dockerfile
    container_name: frontend
    environment:
      BROWSER_BASE_URL: http://localhost:8080/api
      API_BASE_URL: http://host.docker.internal:8080/api
    depends_on:
      - api
    command: sh ./docker/script/local/command.sh
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/frontend
